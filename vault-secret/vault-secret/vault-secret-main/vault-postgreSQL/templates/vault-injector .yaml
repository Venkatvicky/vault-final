apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-agent-injector
  namespace: vault
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault-agent-injector
  template:
    metadata:
      labels:
        app: vault-agent-injector
    spec:
      containers:
        - name: injector
          image: hashicorp/vault-k8s:1.19.2
          imagePullPolicy: Always
          env:
            - name: VAULT_ADDR
              value: "http://vault.vault.svc.cluster.local:8200"  # Replace with your Vault address
            - name: VAULT_AGENT_INJECTOR_LOG_LEVEL
              value: "debug"  # Optional: Use "debug" for more detailed logs
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
            fsGroup: 65534
            seccompProfile:
              type: RuntimeDefault
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
      serviceAccountName: vault-auth  # The service account that Vault uses to authenticate with Kubernetes
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # The Vault Agent Injector needs permissions to manage Kubernetes resources.
  # Ensure this role has the required access to read secrets and config maps.
  # Modify the resource list and verbs as necessary.
  # You might need additional resources like roles, rolebindings, etc.
  name: vault-agent-injector
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "endpoints", "secrets", "configmaps"]
    verbs: ["get", "list", "create", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-agent-injector-binding
subjects:
  - kind: ServiceAccount
    name: vault-auth  # The service account used for Vault authentication
    namespace: vault
roleRef:
  kind: ClusterRole
  name: vault-agent-injector
  apiGroup: rbac.authorization.k8s.io
